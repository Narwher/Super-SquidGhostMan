<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>obj_msg_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentOption = 1
global.gameMove = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if keyboard_check_pressed(ord('S')) || keyboard_check_pressed(vk_up){
    if currentOption &lt; 3{
        currentOption = currentOption + 1;
        sound_play(snd_click)
    }
}else if keyboard_check_pressed(ord('W')) || keyboard_check_pressed(vk_down){
    if currentOption &gt; 1 {
        currentOption = currentOption - 1;
        sound_play(snd_click)
    }
}

if currentOption == 1{ //return to title
    if keyboard_check_pressed(vk_return){
        keyboard_clear(vk_return);
        game_restart();
    }
}else if currentOption == 2{ //load game
    if keyboard_check_pressed(vk_return){
        global.gameMove = true;
        scr_loadgame();
        sound_play(snd_ohyeah);
    }
}else if currentOption == 3{ //exit game
    if keyboard_check_pressed(vk_return){
        game_end();
    }
}

if keyboard_check_pressed(vk_escape){
    keyboard_clear(vk_escape)
    global.gameMove = true;
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//window

draw_set_color(c_gray);
draw_rectangle(view_xview[0]+96,view_yview[0] + 48, view_xview[0] + 224, view_yview[0] + 144,false)
draw_set_color(c_dkgray);
draw_rectangle(view_xview[0]+96,view_yview[0] + 48, view_xview[0] + 224, view_yview[0] + 144,true)
draw_set_font(fntCursive)
draw_set_color(c_black);
draw_text(view_xview[0]+138,view_yview[0] + 56,"Restart")
draw_text(view_xview[0]+138,view_yview[0] + 85,"Load")
draw_text(view_xview[0]+138,view_yview[0] + 117,"Quit")
    //draw cursor
    
    if currentOption ==1{
        draw_sprite(spr_bullet,0,view_xview[0]+128,view_yview[0] + 64)
    }else if currentOption == 2{
        draw_sprite(spr_bullet,0,view_xview[0]+128,view_yview[0] + 96)
    }else if currentOption == 3{
        draw_sprite(spr_bullet,0,view_xview[0]+128,view_yview[0] + 128)
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
